@PREAMBLE{ "\newcommand{\noopsort}[1]{} "
# "\newcommand{\singleletter}[1]{#1} " }

@STRING( WGA = " World Gnus Almanac" )
@string{btx = "{\textsc{Bib}\TeX}"} 

@ARTICLE{
  test,
  title={Polluted
    with {DDT}.
  },
}

@ARTICLE{
 test,
 title="Nested braces  and {"quotes"}",
}

@article{Me2010, author="Brett, Matthew", title="An article
@article{something, author={Name, Another}, title={not really an article}}
"}
@article{Me2009,author={Nom de Plume, My}, title="A short story"}

Both the articles register despite the comment block
@Comment{
@article{Me2010, title="An article"}
@article{Me2009, title="A short story"}
}
These all work OK without errors
@Comment{and more stuff}

Last article to show we can get here
@article{Me2011, }

The @ here parses fine in both cases
@article{Me2010,
  title={An @tey article}}
@article{Me2009, title="A @tey short story"}

Testing what are allowed for entry types

These are OK
@somename{an_id,}
@t2{another_id,}
@t@{again_id,}
@t+{aa1_id,}
@_t{aa2_id,}

These ones not
@2thou{further_id,}
@some name{id3,}
@some#{id4,}
@some%{id4,}

Check for characters allowed in field names
Here the cite key is fine, but the field name is not allowed:
``You are missing a field name``
@article{2010, 0author="Me"}

Underscores allowed (no error)
@article{2011, _author="Me"}

Not so for spaces obviously (``expecting an '='``)
@article{2012, author name = "Myself"}

Or hashes (``missing a field name``)
@article{2013, #name = "Myself"}

But field names can start with +-.
@article{2014, .name = "Myself"}
@article{2015, +name = "Myself"}
@article{2016, -name = "Myself"}
@article{2017, @name = "Myself"}

"some text" causes an error like this
``You're missing a field name---line 6 of file bibs/inline_comment.bib``
for all 3 of the % some text occurences below; in each case the parser keeps
what it has up till that point and skips, so that it correctly gets the last
entry.
@article{Me2010,}
@article{Me2011,
  author="Brett-like, Matthew",
% some text
  title="Another article"}
@article{Me2012, % some text
  author="Real Brett"}
This one correctly read
@article{Me2013,}

% maybe the simplest possible
% just a comment and one reference

@ARTICLE{Brett2002marsbar,
author = {Matthew Brett and Jean-Luc Anton and Romain Valabregue and Jean-Baptise
  Poline},
title = {{Region of interest analysis using an SPM toolbox}},
journal = {Neuroimage},
institution = {},
year = {2002},
volume = {16},
pages = {1140--1141},
number = {2}

# will not work as expected
@article(test(parens1))

# works fine
@article(test(parens2),)

# works fine
@article{test(braces1)}

# also works
@article{test(braces2),}

@BOOK(
  title="I Am Jackie Chan: My Life in Action",
  year=1999
)
@BOOK()
@BOOK{}

@BOOK{
  title = "Der deutsche Jackie Chan Filmf√ºhrer",
}

@String{and = { and }}
@String{etal = and # { {et al.}}}
@Article(
  unknown,
  author = nobody,
)
@Article(
  gsl,
  author = "Gough, Brian"#etal,
)

@Article(
  gsl,
)

@Article(gsl, crossref="the_journal")
@Article(gsl2, crossref="The_Journal")
@Journal{the_journal,}

@Article(
  gsl,
  author = nobody,
)
