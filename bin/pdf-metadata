#! /usr/bin/env python

####################################################################################################
# 
# Babel - A Bibliography Manager
# Copyright (C) 2014 Fabrice Salvaire
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
####################################################################################################

####################################################################################################
#
# Logging
#

import Babel.Logging.Logging as Logging

logger = Logging.setup_logging('babel')

####################################################################################################

import argparse

####################################################################################################

from Babel.Tools.ProgramOptions import PathAction
from Babel.Pdf.PdfMetaDataExtractor import PdfMetaDataExtractor
from Babel.Pdf.TextTokenizer import join_tokens

####################################################################################################
#
# Options
#

argument_parser = argparse.ArgumentParser(description='Extract PDF Metadata.')

argument_parser.add_argument('path', metavar='FILE.pdf',
                             action=PathAction,
                             help='PDF file')

args = argument_parser.parse_args()

####################################################################################################

pdf_metadata_extractor = PdfMetaDataExtractor(args.path)
print 'Metadata:'
for key, value in sorted(pdf_metadata_extractor.metadata.iteritems()):
    print ' ', key + ': ' + unicode(value)
print 'Number of pages:' , pdf_metadata_extractor.number_of_pages
print "Guessed attributes:"
print ' Title:', pdf_metadata_extractor.title
print ' Authors:'
for author_tokens in pdf_metadata_extractor.authors:
    print ' '*2, join_tokens(author_tokens)

####################################################################################################
# 
# End
# 
####################################################################################################
