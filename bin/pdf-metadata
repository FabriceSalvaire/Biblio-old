#! /usr/bin/env python

####################################################################################################
# 
# Babel - A Bibliography Manager 
# Copyright (C) Salvaire Fabrice 2013 
# 
####################################################################################################

####################################################################################################
#
# Logging
#

import Babel.Logging.Logging as Logging

logger = Logging.setup_logging('babel')

####################################################################################################

import argparse

####################################################################################################

from Babel.Tools.ProgramOptions import PathAction
from Babel.Pdf.PdfDocument import PdfDocument
from Babel.Pdf.PdfMetaDataExtractor import PdfMetaDataExtractor
from Babel.Tools.Statistics import Gaussian

####################################################################################################
#
# Options
#

argument_parser = argparse.ArgumentParser(description='Extract PDF Metadata.')

argument_parser.add_argument('path', metavar='FILE.pdf',
                             action=PathAction,
                             help='PDF file')
args = argument_parser.parse_args()

####################################################################################################

pdf_metadata_extractor = PdfMetaDataExtractor(args.path)
pdf_metadata_extractor.dump()
pdf_metadata_extractor._guess_title()
pdf_metadata_extractor._guess_author()

# for text_block in text_blocks.sorted_iter():
#     print "="*100
#     tokenised_text = text_block.tokenised_text
#     for word in tokenised_text:
#         print word.category, '"' + unicode(word) + '"'
#     for word in tokenised_text.word_number_iterator():
#         print unicode(word)
#     print tokenised_text.count_word_number()
 
####################################################################################################
# 
# End
# 
####################################################################################################
