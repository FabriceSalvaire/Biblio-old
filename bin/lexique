#! /usr/bin/env python

####################################################################################################
# 
# Babel - A Bibliography Manager
# Copyright (C) 2014 Fabrice Salvaire
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
####################################################################################################

####################################################################################################
#
# Logging
#

import Babel.Logging.Logging as Logging

logger = Logging.setup_logging('babel')

####################################################################################################

import argparse
import os

####################################################################################################

from Babel.DataBase.WordDataBase import WordDataBase
from Babel.Tools.ProgramOptions import PathAction

####################################################################################################
#
# Options
#

argument_parser = argparse.ArgumentParser(description='A tool to query the British National Corpus database.')

argument_parser.add_argument('word', metavar='WORD',
                             help='Word')

args = argument_parser.parse_args()

####################################################################################################

database_path = os.path.join(os.path.dirname(__file__), '../Babel/Lexique/BritishNationalCorpus/bnc.sqlite')
print(os.path.realpath(database_path))

database = WordDataBase(database_path)
word_table = database.word_table
part_of_speech_tag_table = database.part_of_speech_tag_table

word_rows = word_table.select_by(word=args.word).all()
for word_row in word_rows:
    tag_row = part_of_speech_tag_table.select_by(id=word_row.part_of_speech_tag_id).one()
    # Fixme: comment layout
    message = '''
Word
  word: %s
  count: %u
  part of speech tag: %s
  %s
'''
    print(message % (word_row.word, word_row.count,
                     tag_row.tag, tag_row.comment))

####################################################################################################
# 
# End
# 
####################################################################################################
