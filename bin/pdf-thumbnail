#! /usr/bin/env python

####################################################################################################
# 
# Babel - A Bibliography Manager 
# Copyright (C) Salvaire Fabrice 2013 
# 
####################################################################################################

####################################################################################################
#
# Logging
#

import Babel.Logging.Logging as Logging

logger = Logging.setup_logging('babel')

####################################################################################################

import argparse

####################################################################################################

from Babel.Tools.ProgramOptions import PathAction
from Babel.Pdf.PdfMetaDataExtractor import PdfDocument

####################################################################################################
#
# Options
#

argument_parser = argparse.ArgumentParser(description='Generate thumbnail.')

argument_parser.add_argument('pdf_path', metavar='FILE.pdf',
                             action=PathAction,
                             help='PDF file')

argument_parser.add_argument('png_path', metavar='OUTPUT.png',
                             action=PathAction,
                             help='PNG file')

argument_parser.add_argument('--resolution', 
                             type=int, default=72,
                             help='resolution in dpi (default: 72)')

argument_parser.add_argument('--rotation', 
                             type=int, default=0,
                             help='rotate clockwise by given number of degrees')

argument_parser.add_argument('--width', 
                             type=int, default=0,
                             help='width (in pixels) (maximum width if resolution is specified)')

argument_parser.add_argument('--height', 
                             type=int, default=0,
                             help='height (in pixels) (maximum height if resolution is specified)')

argument_parser.add_argument('--fit', 
                             action='store_true', default=False,
                             help='fit width and/or height exactly (ignore aspect)')

argument_parser.add_argument('--antialiasing-level', 
                             type=int, default=8,
                             help='antialiasing level')

args = argument_parser.parse_args()

####################################################################################################

pdf_document = PdfDocument(args.pdf_path)
first_page = pdf_document.first_page
first_page.to_png(path=args.png_path,
                  rotation=args.rotation,
                  resolution=args.resolution,
                  width=args.width, height=args.height, fit=args.fit,
                  antialiasing_level=args.antialiasing_level
                  )

####################################################################################################
# 
# End
# 
####################################################################################################
